// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMessage.proto

#ifndef PROTOBUF_ServerMessage_2eproto__INCLUDED
#define PROTOBUF_ServerMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ServerMessage {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ServerMessage_2eproto();
void protobuf_AssignDesc_ServerMessage_2eproto();
void protobuf_ShutdownFile_ServerMessage_2eproto();

class ServerInformation;
class playerPos;
class Playerinfromation;
class AdditionalInformation;
class ServerMessage;

// ===================================================================

class ServerInformation : public ::google::protobuf::Message {
 public:
  ServerInformation();
  virtual ~ServerInformation();

  ServerInformation(const ServerInformation& from);

  inline ServerInformation& operator=(const ServerInformation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInformation& default_instance();

  void Swap(ServerInformation* other);

  // implements Message ----------------------------------------------

  ServerInformation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInformation& from);
  void MergeFrom(const ServerInformation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverInformation = 1;
  inline bool has_serverinformation() const;
  inline void clear_serverinformation();
  static const int kServerInformationFieldNumber = 1;
  inline ::google::protobuf::int32 serverinformation() const;
  inline void set_serverinformation(::google::protobuf::int32 value);

  // required int64 messageNumber = 2;
  inline bool has_messagenumber() const;
  inline void clear_messagenumber();
  static const int kMessageNumberFieldNumber = 2;
  inline ::google::protobuf::int64 messagenumber() const;
  inline void set_messagenumber(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ServerMessage.ServerInformation)
 private:
  inline void set_has_serverinformation();
  inline void clear_has_serverinformation();
  inline void set_has_messagenumber();
  inline void clear_has_messagenumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 messagenumber_;
  ::google::protobuf::int32 serverinformation_;
  friend void  protobuf_AddDesc_ServerMessage_2eproto();
  friend void protobuf_AssignDesc_ServerMessage_2eproto();
  friend void protobuf_ShutdownFile_ServerMessage_2eproto();

  void InitAsDefaultInstance();
  static ServerInformation* default_instance_;
};
// -------------------------------------------------------------------

class playerPos : public ::google::protobuf::Message {
 public:
  playerPos();
  virtual ~playerPos();

  playerPos(const playerPos& from);

  inline playerPos& operator=(const playerPos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const playerPos& default_instance();

  void Swap(playerPos* other);

  // implements Message ----------------------------------------------

  playerPos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const playerPos& from);
  void MergeFrom(const playerPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float posY = 1;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 1;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline float posx() const;
  inline void set_posx(float value);

  // @@protoc_insertion_point(class_scope:ServerMessage.playerPos)
 private:
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posx();
  inline void clear_has_posx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float posy_;
  float posx_;
  friend void  protobuf_AddDesc_ServerMessage_2eproto();
  friend void protobuf_AssignDesc_ServerMessage_2eproto();
  friend void protobuf_ShutdownFile_ServerMessage_2eproto();

  void InitAsDefaultInstance();
  static playerPos* default_instance_;
};
// -------------------------------------------------------------------

class Playerinfromation : public ::google::protobuf::Message {
 public:
  Playerinfromation();
  virtual ~Playerinfromation();

  Playerinfromation(const Playerinfromation& from);

  inline Playerinfromation& operator=(const Playerinfromation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Playerinfromation& default_instance();

  void Swap(Playerinfromation* other);

  // implements Message ----------------------------------------------

  Playerinfromation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Playerinfromation& from);
  void MergeFrom(const Playerinfromation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerNumber = 1;
  inline bool has_playernumber() const;
  inline void clear_playernumber();
  static const int kPlayerNumberFieldNumber = 1;
  inline ::google::protobuf::int32 playernumber() const;
  inline void set_playernumber(::google::protobuf::int32 value);

  // required .ServerMessage.playerPos pos = 3;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 3;
  inline const ::ServerMessage::playerPos& pos() const;
  inline ::ServerMessage::playerPos* mutable_pos();
  inline ::ServerMessage::playerPos* release_pos();
  inline void set_allocated_pos(::ServerMessage::playerPos* pos);

  // required int32 playerScore = 4;
  inline bool has_playerscore() const;
  inline void clear_playerscore();
  static const int kPlayerScoreFieldNumber = 4;
  inline ::google::protobuf::int32 playerscore() const;
  inline void set_playerscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ServerMessage.Playerinfromation)
 private:
  inline void set_has_playernumber();
  inline void clear_has_playernumber();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_playerscore();
  inline void clear_has_playerscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ServerMessage::playerPos* pos_;
  ::google::protobuf::int32 playernumber_;
  ::google::protobuf::int32 playerscore_;
  friend void  protobuf_AddDesc_ServerMessage_2eproto();
  friend void protobuf_AssignDesc_ServerMessage_2eproto();
  friend void protobuf_ShutdownFile_ServerMessage_2eproto();

  void InitAsDefaultInstance();
  static Playerinfromation* default_instance_;
};
// -------------------------------------------------------------------

class AdditionalInformation : public ::google::protobuf::Message {
 public:
  AdditionalInformation();
  virtual ~AdditionalInformation();

  AdditionalInformation(const AdditionalInformation& from);

  inline AdditionalInformation& operator=(const AdditionalInformation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdditionalInformation& default_instance();

  void Swap(AdditionalInformation* other);

  // implements Message ----------------------------------------------

  AdditionalInformation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdditionalInformation& from);
  void MergeFrom(const AdditionalInformation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ServerMessage.AdditionalInformation)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ServerMessage_2eproto();
  friend void protobuf_AssignDesc_ServerMessage_2eproto();
  friend void protobuf_ShutdownFile_ServerMessage_2eproto();

  void InitAsDefaultInstance();
  static AdditionalInformation* default_instance_;
};
// -------------------------------------------------------------------

class ServerMessage : public ::google::protobuf::Message {
 public:
  ServerMessage();
  virtual ~ServerMessage();

  ServerMessage(const ServerMessage& from);

  inline ServerMessage& operator=(const ServerMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerMessage& default_instance();

  void Swap(ServerMessage* other);

  // implements Message ----------------------------------------------

  ServerMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerMessage& from);
  void MergeFrom(const ServerMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playersConnected = 1;
  inline bool has_playersconnected() const;
  inline void clear_playersconnected();
  static const int kPlayersConnectedFieldNumber = 1;
  inline ::google::protobuf::int32 playersconnected() const;
  inline void set_playersconnected(::google::protobuf::int32 value);

  // required .ServerMessage.ServerInformation serverinfo = 2;
  inline bool has_serverinfo() const;
  inline void clear_serverinfo();
  static const int kServerinfoFieldNumber = 2;
  inline const ::ServerMessage::ServerInformation& serverinfo() const;
  inline ::ServerMessage::ServerInformation* mutable_serverinfo();
  inline ::ServerMessage::ServerInformation* release_serverinfo();
  inline void set_allocated_serverinfo(::ServerMessage::ServerInformation* serverinfo);

  // required .ServerMessage.Playerinfromation playerOne = 3;
  inline bool has_playerone() const;
  inline void clear_playerone();
  static const int kPlayerOneFieldNumber = 3;
  inline const ::ServerMessage::Playerinfromation& playerone() const;
  inline ::ServerMessage::Playerinfromation* mutable_playerone();
  inline ::ServerMessage::Playerinfromation* release_playerone();
  inline void set_allocated_playerone(::ServerMessage::Playerinfromation* playerone);

  // required .ServerMessage.Playerinfromation playerTwo = 4;
  inline bool has_playertwo() const;
  inline void clear_playertwo();
  static const int kPlayerTwoFieldNumber = 4;
  inline const ::ServerMessage::Playerinfromation& playertwo() const;
  inline ::ServerMessage::Playerinfromation* mutable_playertwo();
  inline ::ServerMessage::Playerinfromation* release_playertwo();
  inline void set_allocated_playertwo(::ServerMessage::Playerinfromation* playertwo);

  // required int32 playerNumber = 5;
  inline bool has_playernumber() const;
  inline void clear_playernumber();
  static const int kPlayerNumberFieldNumber = 5;
  inline ::google::protobuf::int32 playernumber() const;
  inline void set_playernumber(::google::protobuf::int32 value);

  // required .ServerMessage.AdditionalInformation additioanlInfo = 8;
  inline bool has_additioanlinfo() const;
  inline void clear_additioanlinfo();
  static const int kAdditioanlInfoFieldNumber = 8;
  inline const ::ServerMessage::AdditionalInformation& additioanlinfo() const;
  inline ::ServerMessage::AdditionalInformation* mutable_additioanlinfo();
  inline ::ServerMessage::AdditionalInformation* release_additioanlinfo();
  inline void set_allocated_additioanlinfo(::ServerMessage::AdditionalInformation* additioanlinfo);

  // @@protoc_insertion_point(class_scope:ServerMessage.ServerMessage)
 private:
  inline void set_has_playersconnected();
  inline void clear_has_playersconnected();
  inline void set_has_serverinfo();
  inline void clear_has_serverinfo();
  inline void set_has_playerone();
  inline void clear_has_playerone();
  inline void set_has_playertwo();
  inline void clear_has_playertwo();
  inline void set_has_playernumber();
  inline void clear_has_playernumber();
  inline void set_has_additioanlinfo();
  inline void clear_has_additioanlinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ServerMessage::ServerInformation* serverinfo_;
  ::ServerMessage::Playerinfromation* playerone_;
  ::google::protobuf::int32 playersconnected_;
  ::google::protobuf::int32 playernumber_;
  ::ServerMessage::Playerinfromation* playertwo_;
  ::ServerMessage::AdditionalInformation* additioanlinfo_;
  friend void  protobuf_AddDesc_ServerMessage_2eproto();
  friend void protobuf_AssignDesc_ServerMessage_2eproto();
  friend void protobuf_ShutdownFile_ServerMessage_2eproto();

  void InitAsDefaultInstance();
  static ServerMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// ServerInformation

// required int32 serverInformation = 1;
inline bool ServerInformation::has_serverinformation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerInformation::set_has_serverinformation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerInformation::clear_has_serverinformation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerInformation::clear_serverinformation() {
  serverinformation_ = 0;
  clear_has_serverinformation();
}
inline ::google::protobuf::int32 ServerInformation::serverinformation() const {
  // @@protoc_insertion_point(field_get:ServerMessage.ServerInformation.serverInformation)
  return serverinformation_;
}
inline void ServerInformation::set_serverinformation(::google::protobuf::int32 value) {
  set_has_serverinformation();
  serverinformation_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.ServerInformation.serverInformation)
}

// required int64 messageNumber = 2;
inline bool ServerInformation::has_messagenumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerInformation::set_has_messagenumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerInformation::clear_has_messagenumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerInformation::clear_messagenumber() {
  messagenumber_ = GOOGLE_LONGLONG(0);
  clear_has_messagenumber();
}
inline ::google::protobuf::int64 ServerInformation::messagenumber() const {
  // @@protoc_insertion_point(field_get:ServerMessage.ServerInformation.messageNumber)
  return messagenumber_;
}
inline void ServerInformation::set_messagenumber(::google::protobuf::int64 value) {
  set_has_messagenumber();
  messagenumber_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.ServerInformation.messageNumber)
}

// -------------------------------------------------------------------

// playerPos

// required float posY = 1;
inline bool playerPos::has_posy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void playerPos::set_has_posy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void playerPos::clear_has_posy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void playerPos::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float playerPos::posy() const {
  // @@protoc_insertion_point(field_get:ServerMessage.playerPos.posY)
  return posy_;
}
inline void playerPos::set_posy(float value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.playerPos.posY)
}

// required float posX = 2;
inline bool playerPos::has_posx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void playerPos::set_has_posx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void playerPos::clear_has_posx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void playerPos::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float playerPos::posx() const {
  // @@protoc_insertion_point(field_get:ServerMessage.playerPos.posX)
  return posx_;
}
inline void playerPos::set_posx(float value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.playerPos.posX)
}

// -------------------------------------------------------------------

// Playerinfromation

// required int32 playerNumber = 1;
inline bool Playerinfromation::has_playernumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Playerinfromation::set_has_playernumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Playerinfromation::clear_has_playernumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Playerinfromation::clear_playernumber() {
  playernumber_ = 0;
  clear_has_playernumber();
}
inline ::google::protobuf::int32 Playerinfromation::playernumber() const {
  // @@protoc_insertion_point(field_get:ServerMessage.Playerinfromation.playerNumber)
  return playernumber_;
}
inline void Playerinfromation::set_playernumber(::google::protobuf::int32 value) {
  set_has_playernumber();
  playernumber_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.Playerinfromation.playerNumber)
}

// required .ServerMessage.playerPos pos = 3;
inline bool Playerinfromation::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Playerinfromation::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Playerinfromation::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Playerinfromation::clear_pos() {
  if (pos_ != NULL) pos_->::ServerMessage::playerPos::Clear();
  clear_has_pos();
}
inline const ::ServerMessage::playerPos& Playerinfromation::pos() const {
  // @@protoc_insertion_point(field_get:ServerMessage.Playerinfromation.pos)
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::ServerMessage::playerPos* Playerinfromation::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::ServerMessage::playerPos;
  // @@protoc_insertion_point(field_mutable:ServerMessage.Playerinfromation.pos)
  return pos_;
}
inline ::ServerMessage::playerPos* Playerinfromation::release_pos() {
  clear_has_pos();
  ::ServerMessage::playerPos* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void Playerinfromation::set_allocated_pos(::ServerMessage::playerPos* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.Playerinfromation.pos)
}

// required int32 playerScore = 4;
inline bool Playerinfromation::has_playerscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Playerinfromation::set_has_playerscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Playerinfromation::clear_has_playerscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Playerinfromation::clear_playerscore() {
  playerscore_ = 0;
  clear_has_playerscore();
}
inline ::google::protobuf::int32 Playerinfromation::playerscore() const {
  // @@protoc_insertion_point(field_get:ServerMessage.Playerinfromation.playerScore)
  return playerscore_;
}
inline void Playerinfromation::set_playerscore(::google::protobuf::int32 value) {
  set_has_playerscore();
  playerscore_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.Playerinfromation.playerScore)
}

// -------------------------------------------------------------------

// AdditionalInformation

// -------------------------------------------------------------------

// ServerMessage

// required int32 playersConnected = 1;
inline bool ServerMessage::has_playersconnected() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerMessage::set_has_playersconnected() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerMessage::clear_has_playersconnected() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerMessage::clear_playersconnected() {
  playersconnected_ = 0;
  clear_has_playersconnected();
}
inline ::google::protobuf::int32 ServerMessage::playersconnected() const {
  // @@protoc_insertion_point(field_get:ServerMessage.ServerMessage.playersConnected)
  return playersconnected_;
}
inline void ServerMessage::set_playersconnected(::google::protobuf::int32 value) {
  set_has_playersconnected();
  playersconnected_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.ServerMessage.playersConnected)
}

// required .ServerMessage.ServerInformation serverinfo = 2;
inline bool ServerMessage::has_serverinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerMessage::set_has_serverinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerMessage::clear_has_serverinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerMessage::clear_serverinfo() {
  if (serverinfo_ != NULL) serverinfo_->::ServerMessage::ServerInformation::Clear();
  clear_has_serverinfo();
}
inline const ::ServerMessage::ServerInformation& ServerMessage::serverinfo() const {
  // @@protoc_insertion_point(field_get:ServerMessage.ServerMessage.serverinfo)
  return serverinfo_ != NULL ? *serverinfo_ : *default_instance_->serverinfo_;
}
inline ::ServerMessage::ServerInformation* ServerMessage::mutable_serverinfo() {
  set_has_serverinfo();
  if (serverinfo_ == NULL) serverinfo_ = new ::ServerMessage::ServerInformation;
  // @@protoc_insertion_point(field_mutable:ServerMessage.ServerMessage.serverinfo)
  return serverinfo_;
}
inline ::ServerMessage::ServerInformation* ServerMessage::release_serverinfo() {
  clear_has_serverinfo();
  ::ServerMessage::ServerInformation* temp = serverinfo_;
  serverinfo_ = NULL;
  return temp;
}
inline void ServerMessage::set_allocated_serverinfo(::ServerMessage::ServerInformation* serverinfo) {
  delete serverinfo_;
  serverinfo_ = serverinfo;
  if (serverinfo) {
    set_has_serverinfo();
  } else {
    clear_has_serverinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.ServerMessage.serverinfo)
}

// required .ServerMessage.Playerinfromation playerOne = 3;
inline bool ServerMessage::has_playerone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerMessage::set_has_playerone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerMessage::clear_has_playerone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerMessage::clear_playerone() {
  if (playerone_ != NULL) playerone_->::ServerMessage::Playerinfromation::Clear();
  clear_has_playerone();
}
inline const ::ServerMessage::Playerinfromation& ServerMessage::playerone() const {
  // @@protoc_insertion_point(field_get:ServerMessage.ServerMessage.playerOne)
  return playerone_ != NULL ? *playerone_ : *default_instance_->playerone_;
}
inline ::ServerMessage::Playerinfromation* ServerMessage::mutable_playerone() {
  set_has_playerone();
  if (playerone_ == NULL) playerone_ = new ::ServerMessage::Playerinfromation;
  // @@protoc_insertion_point(field_mutable:ServerMessage.ServerMessage.playerOne)
  return playerone_;
}
inline ::ServerMessage::Playerinfromation* ServerMessage::release_playerone() {
  clear_has_playerone();
  ::ServerMessage::Playerinfromation* temp = playerone_;
  playerone_ = NULL;
  return temp;
}
inline void ServerMessage::set_allocated_playerone(::ServerMessage::Playerinfromation* playerone) {
  delete playerone_;
  playerone_ = playerone;
  if (playerone) {
    set_has_playerone();
  } else {
    clear_has_playerone();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.ServerMessage.playerOne)
}

// required .ServerMessage.Playerinfromation playerTwo = 4;
inline bool ServerMessage::has_playertwo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerMessage::set_has_playertwo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerMessage::clear_has_playertwo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerMessage::clear_playertwo() {
  if (playertwo_ != NULL) playertwo_->::ServerMessage::Playerinfromation::Clear();
  clear_has_playertwo();
}
inline const ::ServerMessage::Playerinfromation& ServerMessage::playertwo() const {
  // @@protoc_insertion_point(field_get:ServerMessage.ServerMessage.playerTwo)
  return playertwo_ != NULL ? *playertwo_ : *default_instance_->playertwo_;
}
inline ::ServerMessage::Playerinfromation* ServerMessage::mutable_playertwo() {
  set_has_playertwo();
  if (playertwo_ == NULL) playertwo_ = new ::ServerMessage::Playerinfromation;
  // @@protoc_insertion_point(field_mutable:ServerMessage.ServerMessage.playerTwo)
  return playertwo_;
}
inline ::ServerMessage::Playerinfromation* ServerMessage::release_playertwo() {
  clear_has_playertwo();
  ::ServerMessage::Playerinfromation* temp = playertwo_;
  playertwo_ = NULL;
  return temp;
}
inline void ServerMessage::set_allocated_playertwo(::ServerMessage::Playerinfromation* playertwo) {
  delete playertwo_;
  playertwo_ = playertwo;
  if (playertwo) {
    set_has_playertwo();
  } else {
    clear_has_playertwo();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.ServerMessage.playerTwo)
}

// required int32 playerNumber = 5;
inline bool ServerMessage::has_playernumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerMessage::set_has_playernumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerMessage::clear_has_playernumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerMessage::clear_playernumber() {
  playernumber_ = 0;
  clear_has_playernumber();
}
inline ::google::protobuf::int32 ServerMessage::playernumber() const {
  // @@protoc_insertion_point(field_get:ServerMessage.ServerMessage.playerNumber)
  return playernumber_;
}
inline void ServerMessage::set_playernumber(::google::protobuf::int32 value) {
  set_has_playernumber();
  playernumber_ = value;
  // @@protoc_insertion_point(field_set:ServerMessage.ServerMessage.playerNumber)
}

// required .ServerMessage.AdditionalInformation additioanlInfo = 8;
inline bool ServerMessage::has_additioanlinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServerMessage::set_has_additioanlinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServerMessage::clear_has_additioanlinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServerMessage::clear_additioanlinfo() {
  if (additioanlinfo_ != NULL) additioanlinfo_->::ServerMessage::AdditionalInformation::Clear();
  clear_has_additioanlinfo();
}
inline const ::ServerMessage::AdditionalInformation& ServerMessage::additioanlinfo() const {
  // @@protoc_insertion_point(field_get:ServerMessage.ServerMessage.additioanlInfo)
  return additioanlinfo_ != NULL ? *additioanlinfo_ : *default_instance_->additioanlinfo_;
}
inline ::ServerMessage::AdditionalInformation* ServerMessage::mutable_additioanlinfo() {
  set_has_additioanlinfo();
  if (additioanlinfo_ == NULL) additioanlinfo_ = new ::ServerMessage::AdditionalInformation;
  // @@protoc_insertion_point(field_mutable:ServerMessage.ServerMessage.additioanlInfo)
  return additioanlinfo_;
}
inline ::ServerMessage::AdditionalInformation* ServerMessage::release_additioanlinfo() {
  clear_has_additioanlinfo();
  ::ServerMessage::AdditionalInformation* temp = additioanlinfo_;
  additioanlinfo_ = NULL;
  return temp;
}
inline void ServerMessage::set_allocated_additioanlinfo(::ServerMessage::AdditionalInformation* additioanlinfo) {
  delete additioanlinfo_;
  additioanlinfo_ = additioanlinfo;
  if (additioanlinfo) {
    set_has_additioanlinfo();
  } else {
    clear_has_additioanlinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.ServerMessage.additioanlInfo)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerMessage

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerMessage_2eproto__INCLUDED
